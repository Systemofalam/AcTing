- name: Start Dissemination Nodes with Traffic Tracking
  hosts: all
  become: no
  vars:
    app_dir: "{{ playbook_dir }}/../roles/setup_environment/files"
    binary_path: "{{ app_dir }}/dissemination"
    config_dir: "{{ app_dir }}/configs"
    log_dir: "{{ playbook_dir }}/../logs"

  tasks:
    - name: Verify dissemination binary exists
      ansible.builtin.stat:
        path: "{{ binary_path }}"
      register: dissemination_binary

    - name: Ensure dissemination binary is available
      ansible.builtin.fail:
        msg: "The dissemination binary is missing at {{ binary_path }}. Please compile it first."
      when: not dissemination_binary.stat.exists

    - name: Ensure configuration directory exists
      ansible.builtin.file:
        path: "{{ config_dir }}"
        state: directory
        mode: '0755'

    - name: Ensure log directory exists
      ansible.builtin.file:
        path: "{{ log_dir }}"
        state: directory
        mode: '0755'

    - name: Generate configuration for the node
      ansible.builtin.template:
        src: "{{ playbook_dir }}/../roles/run_node/templates/node_config.j2"
        dest: "{{ config_dir }}/node_config_{{ inventory_hostname }}.conf"
      vars:
        node_port: "{{ ansible_port }}"
        log_file: "{{ log_dir }}/dissemination_{{ inventory_hostname }}.log"

    - name: Start dissemination application
      ansible.builtin.shell: |
        nohup {{ binary_path }} \
        --config {{ config_dir }}/node_config_{{ inventory_hostname }}.conf \
        >> {{ log_dir }}/dissemination_{{ inventory_hostname }}.log 2>&1 &
        echo "Started node {{ inventory_hostname }} on port {{ ansible_port }}" >> {{ log_dir }}/node_tracking.log
      args:
        executable: /bin/bash

    - name: Verify tshark is installed
      ansible.builtin.shell: |
        tshark -v
      register: tshark_check
      failed_when: tshark_check.rc != 0
      changed_when: no

    - name: Fail if tshark is not installed
      ansible.builtin.fail:
        msg: "TShark is not installed on {{ inventory_hostname }}. Please install it first."
      when: tshark_check.rc != 0

    - name: Start tshark for traffic capture
      ansible.builtin.shell: |
        nohup tshark -i lo -f "udp port {{ ansible_port }}" \
        -w {{ log_dir }}/traffic_{{ inventory_hostname }}_{{ ansible_port }}.pcap \
        >> {{ log_dir }}/tshark_{{ inventory_hostname }}.log 2>&1 &
      args:
        executable: /bin/bash

    - name: Wait for nodes to finish
      ansible.builtin.pause:
        seconds: 300

    - name: Stop tshark after capture
      ansible.builtin.shell: |
        pkill -f "tshark.*tcp port {{ ansible_port }}"
      args:
        executable: /bin/bash
      when: ansible_port is defined
